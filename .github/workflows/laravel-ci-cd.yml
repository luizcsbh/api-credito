name: Laravel CI/CD

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    name: Testar e Buildar Laravel
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --host=127.0.0.1 --user=root --password=root"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Clonar Repositório
        uses: actions/checkout@v4

      - name: Configurar PHP e Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo, mysql, zip
          coverage: none

      - name: Instalar Dependências
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Criar Arquivo .env
        run: |
          cp .env.example .env
          php artisan key:generate
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=laravel_test" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=root" >> .env

      - name: Rodar Migrations e Seeders
        run: php artisan migrate --seed --force

      - name: Executar Testes
        run: php artisan test

  deploy:
    name: Deploy no Servidor
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Clonar Repositório
        uses: actions/checkout@v4

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /var/www/api-credito
            git pull origin main
            composer install --no-interaction --prefer-dist --optimize-autoloader
            php artisan migrate --force
            php artisan config:clear
            php artisan cache:clear
            php artisan route:clear
            php artisan queue:restart
            sudo systemctl restart nginx
